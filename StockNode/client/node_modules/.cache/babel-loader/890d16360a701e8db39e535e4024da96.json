{"ast":null,"code":"import _defineProperty from \"/Users/prakashsrirangaswamy/Desktop/GitVS/NodeProjects/ScriptingProjects/StockNode/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/prakashsrirangaswamy/Desktop/GitVS/NodeProjects/ScriptingProjects/StockNode/client/src/components/crypto.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\n\nclass crypto extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      renderedResponse: ''\n    };\n\n    this.getResponse = async () => {\n      console.log(\"before API call \");\n      const response = await fetch('/stock/value?function=CURRENCY_EXCHANGE_RATE&from_currency=BTC&to_currency=INR');\n      console.log(_objectSpread({}, response));\n      return response.json();\n    };\n  }\n\n  componentDidMount() {\n    this.getResponse().then(res => {\n      const data = res;\n      this.setState({\n        renderedResponse: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Crypto Values Crypto Code:\", React.createElement(\"input\", {\n      name: \"crypto_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), \"Currency: \", React.createElement(\"input\", {\n      name: \"currency\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getResponse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Cancel\",\n      name: \"Cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"renderedResponse\"));\n  }\n\n}\n\nexport default crypto;","map":{"version":3,"sources":["/Users/prakashsrirangaswamy/Desktop/GitVS/NodeProjects/ScriptingProjects/StockNode/client/src/components/crypto.js"],"names":["React","Component","crypto","state","renderedResponse","getResponse","console","log","response","fetch","json","componentDidMount","then","res","data","setState","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAGA,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAAA;AAAA;AAAA,SAG1BE,KAH0B,GAGlB;AACJC,MAAAA,gBAAgB,EAAC;AADb,KAHkB;;AAAA,SAOzBC,WAPyB,GAOX,YAAY;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gFAAD,CAA5B;AACAH,MAAAA,OAAO,CAACC,GAAR,mBAAiBC,QAAjB;AACA,aAAOA,QAAQ,CAACE,IAAT,EAAP;AACD,KAZuB;AAAA;;AAc1BC,EAAAA,iBAAiB,GAAE;AACf,SAAKN,WAAL,GAAmBO,IAAnB,CAAwBC,GAAG,IAAI;AAC3B,YAAMC,IAAI,GAAGD,GAAb;AACA,WAAKE,QAAL,CAAc;AAAEX,QAAAA,gBAAgB,EAAEU;AAApB,OAAd;AACP,KAHG;AAIH;;AAEDE,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAIJ;AAAO,MAAA,IAAI,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJI,gBAKM;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALN,OAKsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALtC,EAMA;AAAQ,MAAA,OAAO,EAAE,KAAKX,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA,EAOA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARA,CADJ;AAWE;;AAlCoB;;AAqC9B,eAAeH,MAAf","sourcesContent":["import React,{Component} from 'react';\n\n\nclass crypto extends Component{\n\n   \n    state = {\n        renderedResponse:''\n}\n\n     getResponse = async () => {\n        console.log(\"before API call \");\n        const response = await fetch('/stock/value?function=CURRENCY_EXCHANGE_RATE&from_currency=BTC&to_currency=INR');\n        console.log({ ...response });\n        return response.json();\n      };\n\n    componentDidMount(){\n        this.getResponse().then(res => {\n            const data = res; \n            this.setState({ renderedResponse: data });\n    })\n    }\n\n    render() {\n       \n        return (\n            <div>\n        Crypto Values\n       \n        Crypto Code:\n        <input name=\"crypto_name\"></input>\n        Currency: <input name=\"currency\"></input> <br />\n            <button onClick={this.getResponse}>Submit</button>\n            <input type=\"button\" value=\"Cancel\" name=\"Cancel\"></input>\n            <p>renderedResponse</p>\n            </div>\n        )}; \n\n}\nexport default crypto; "]},"metadata":{},"sourceType":"module"}