{"ast":null,"code":"var _jsxFileName = \"/Users/prakashsrirangaswamy/Desktop/GitVS/NodeProjects/ScriptingProjects/StockNode/client/src/components/crypto.js\";\nimport React, { Component } from 'react';\n\nclass crypto extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getResponse = event => {\n      console.log(\"before API call \");\n      const response = fetch('/stock/value?function=CURRENCY_EXCHANGE_RATE&from_currency=BTC&to_currency=INR');\n      return response.json();\n    };\n\n    this.state = {\n      renderedResponse: null\n    };\n  }\n\n  // componentDidMount() {\n  //     this.getResponse().then(res => {\n  //         var data = res;\n  //         console.log({ ...data });\n  //         data = ({ name: \"Prakash\", age: 33, gender: \"Male\" },\n  //             { name: \"Prakash1\", age: 33, gender: \"Male\" });\n  //         this.setState({ renderedResponse: data });\n  //     })\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Crypto Values\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), \"Crypto Code:\", React.createElement(\"select\", {\n      value: \"crypto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"BTC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"BitCoin\"), React.createElement(\"option\", {\n      value: \"LTC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"LiteCoin\"), React.createElement(\"option\", {\n      value: \"DOGE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Doge\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"Currency: \", React.createElement(\"select\", {\n      value: \"currency\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"INR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Rupee\"), React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"US Dollar\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), this.state.renderedResponse.name);\n  }\n\n}\n\nexport default crypto;","map":{"version":3,"sources":["/Users/prakashsrirangaswamy/Desktop/GitVS/NodeProjects/ScriptingProjects/StockNode/client/src/components/crypto.js"],"names":["React","Component","crypto","constructor","props","getResponse","event","console","log","response","fetch","json","state","renderedResponse","render","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,WAPmB,GAOJC,KAAD,IAAW;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,YAAMC,QAAQ,GAAGC,KAAK,CAAC,gFAAD,CAAtB;AAEA,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,KAZkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE;AADT,KAAb;AAGH;;AAQD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B,kBAEgB;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADQ,EAER;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFQ,EAGR;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHQ,CAFhB,EAMa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANb,gBAOc;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADM,EAEN;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFM,CAPd,EAUa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVb,EAUmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVnB,EAYK,KAAKF,KAAL,CAAWC,gBAAX,CAA4BE,IAZjC,CADJ;AAgBH;;AA1C0B;;AA6C/B,eAAeb,MAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass crypto extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            renderedResponse: null\n        }\n    }\n\n    getResponse = (event) => {\n        console.log(\"before API call \");\n        const response = fetch('/stock/value?function=CURRENCY_EXCHANGE_RATE&from_currency=BTC&to_currency=INR');\n\n        return response.json();\n    };\n    // componentDidMount() {\n    //     this.getResponse().then(res => {\n    //         var data = res;\n    //         console.log({ ...data });\n\n    //         data = ({ name: \"Prakash\", age: 33, gender: \"Male\" },\n    //             { name: \"Prakash1\", age: 33, gender: \"Male\" });\n    //         this.setState({ renderedResponse: data });\n    //     })\n    // }\n\n    render() {\n        return (\n            <div>\n                <h1>Crypto Values</h1><br />\n                Crypto Code:<select value=\"crypto\">\n                    <option value=\"BTC\">BitCoin</option>\n                    <option value=\"LTC\">LiteCoin</option>\n                    <option value=\"DOGE\">Doge</option>\n                </select><br />\n                Currency: <select value=\"currency\">\n                    <option value=\"INR\">Rupee</option>\n                    <option value=\"USD\">US Dollar</option>\n                </select><br /><br />\n\n                {this.state.renderedResponse.name}\n            </div>\n        )\n    };\n\n}\nexport default crypto; "]},"metadata":{},"sourceType":"module"}