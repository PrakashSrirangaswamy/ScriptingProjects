{"ast":null,"code":"import _defineProperty from \"/Users/prakashsrirangaswamy/Desktop/GitVS/NodeProjects/ScriptingProjects/StockNode/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/prakashsrirangaswamy/Desktop/GitVS/NodeProjects/ScriptingProjects/StockNode/client/src/components/crypto.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\n\nclass crypto extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      renderedResponse: ''\n    };\n\n    this.getResponse = async () => {\n      console.log(\"before API call \");\n      const response = await fetch('/stock/value?function=CURRENCY_EXCHANGE_RATE&from_currency=BTC&to_currency=INR');\n      return response.json();\n    };\n  }\n\n  componentDidMount() {\n    this.getResponse().then(res => {\n      const data = res;\n      console.log(_objectSpread({}, data));\n      this.setState({\n        renderedResponse: \"data.any\"\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Crypto Values\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), \"Crypto Code:\", React.createElement(\"select\", {\n      value: \"crypto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"BTC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"BitCoin\"), React.createElement(\"option\", {\n      value: \"LTC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"LiteCoin\"), React.createElement(\"option\", {\n      value: \"DOGE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Doge\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), \"Currency: \", React.createElement(\"select\", {\n      value: \"currency\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"INR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Rupee\"), React.createElement(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"US Dollar\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), this.state.renderedResponse);\n  }\n\n}\n\nexport default crypto;","map":{"version":3,"sources":["/Users/prakashsrirangaswamy/Desktop/GitVS/NodeProjects/ScriptingProjects/StockNode/client/src/components/crypto.js"],"names":["React","Component","crypto","state","renderedResponse","getResponse","console","log","response","fetch","json","componentDidMount","then","res","data","setState","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BE,KAD2B,GACnB;AACJC,MAAAA,gBAAgB,EAAE;AADd,KADmB;;AAAA,SAI3BC,WAJ2B,GAIb,YAAY;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gFAAD,CAA5B;AAEA,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,KAT0B;AAAA;;AAU3BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,WAAL,GAAmBO,IAAnB,CAAwBC,GAAG,IAAI;AAC3B,YAAMC,IAAI,GAAGD,GAAb;AACAP,MAAAA,OAAO,CAACC,GAAR,mBAAiBO,IAAjB;AACA,WAAKC,QAAL,CAAc;AAAEX,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACH,KAJD;AAKH;;AAEDY,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B,kBAEgB;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADQ,EAER;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFQ,EAGR;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHQ,CAFhB,EAMa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANb,gBAOc;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADM,EAEN;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFM,CAPd,EAUa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVb,EAUmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVnB,EAYK,KAAKb,KAAL,CAAWC,gBAZhB,CADJ;AAgBH;;AAnC0B;;AAsC/B,eAAeF,MAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass crypto extends Component {\n    state = {\n        renderedResponse: ''\n    }\n    getResponse = async () => {\n        console.log(\"before API call \");\n        const response = await fetch('/stock/value?function=CURRENCY_EXCHANGE_RATE&from_currency=BTC&to_currency=INR');\n\n        return response.json();\n    };\n    componentDidMount() {\n        this.getResponse().then(res => {\n            const data = res;\n            console.log({ ...data });\n            this.setState({ renderedResponse: \"data.any\" });\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Crypto Values</h1><br />\n                Crypto Code:<select value=\"crypto\">\n                    <option value=\"BTC\">BitCoin</option>\n                    <option value=\"LTC\">LiteCoin</option>\n                    <option value=\"DOGE\">Doge</option>\n                </select><br />\n                Currency: <select value=\"currency\">\n                    <option value=\"INR\">Rupee</option>\n                    <option value=\"USD\">US Dollar</option>\n                </select><br /><br />\n\n                {this.state.renderedResponse}\n            </div>\n        )\n    };\n\n}\nexport default crypto; "]},"metadata":{},"sourceType":"module"}